countries_recode <- c()
for(i in which(countries_match == FALSE)) {
countries_recode <- c(countries_recode, flu_countries[i])
}
countries_recode
df1$Country <- recode(df1$Country,
"Antigua and Barbuda" = "Barbuda",
"Bolivia (Plurinational State of)" = "Bolivia",
"Bonaire, Saint Eustatius and Saba" = "Saint Eustatius",
"British Virgin Islands" = "Virgin Islands",
"Brunei Darussalam" = "Brunei",
"CÃ´te d'Ivoire" = "Ivory Coast",
"Cote d'Ivoire" = "Ivory Coast",
"Cabo Verde" = "Cape Verde",
"China, Hong Kong SAR" = "Hong Kong",
"China, Macao SAR" = "Macao",
"Congo" = "Democratic Republic of the Congo",
"CuraÃ§ao" = "Curacao",
"Czechia" = "Czech Republic",
"Democratic People's Republic of Korea" = "North Korea",
"Iran (Islamic Republic of)" = "Iran",
"Lao People's Democratic Republic" = "Laos",
"Micronesia (Federated States of)" = "Micronesia",
"North Macedonia" = "Macedonia",
"Korea, North" = "North Korea",
"Republic of Korea" = "South Korea",
"Korea, South" = "South Korea",
"Republic of Moldova" = "Moldova",
"Russian Federation" = "Russia",
"Saint Kitts and Nevis" = "Nevis",
"Saint Vincent and the Grenadines" = "Grenadines",
"St. Vincent and the Grenadines" = "Grenadines",
"Sint Maarten (Dutch part)" = "Saint Martin",
"Syrian Arab Republic" = "Syria",
"Trinidad and Tobago" = "Trinidad",
"United Kingdom of Great Britain and Northern Ireland" = "UK",
"United Kingdom" = "UK",
"United Republic of Tanzania" = "Tanzania",
"United States of America" = "USA",
"United States" = "USA",
"Venezuela (Bolivarian Republic of)" = "Venezuela",
"Viet Nam" = "Vietnam",
"Wallis and Futuna Islands" = "Wallis and Futuna",
"West Bank and Gaza Strip" = "Gaza Strip",
"Yemen, Rep." = "Yemen")
df1 <- df1 %>% filter(Country != "Eswatini")
df1 <- df1 %>% filter(Country != "Tokelau")
df1 <- df1 %>% filter(Country != "Tuvalu")
return(df1)
}
recode_dataset <- function(df1, df2 = world_map){
flu_countries <- as.factor(df1$Country) %>% levels()
world_countries <- as.factor(df2$region) %>% levels()
countries_match <- flu_countries %in% world_countries
countries_recode <- c()
for(i in which(countries_match == FALSE)) {
countries_recode <- c(countries_recode, flu_countries[i])
}
countries_recode
df1$Country <- recode(df1$Country,
"Antigua and Barbuda" = "Barbuda",
"Bolivia (Plurinational State of)" = "Bolivia",
"Bonaire, Saint Eustatius and Saba" = "Saint Eustatius",
"British Virgin Islands" = "Virgin Islands",
"Brunei Darussalam" = "Brunei",
"CÃ´te d'Ivoire" = "Ivory Coast",
"Cote d'Ivoire" = "Ivory Coast",
"Cabo Verde" = "Cape Verde",
"China, Hong Kong SAR" = "Hong Kong",
"China, Macao SAR" = "Macao",
"Congo" = "Democratic Republic of the Congo",
"CuraÃ§ao" = "Curacao",
"Czechia" = "Czech Republic",
"Democratic People's Republic of Korea" = "North Korea",
"Iran (Islamic Republic of)" = "Iran",
"Lao People's Democratic Republic" = "Laos",
"Micronesia (Federated States of)" = "Micronesia",
"North Macedonia" = "Macedonia",
"Korea, North" = "North Korea",
"Republic of Korea" = "South Korea",
"Korea, South" = "South Korea",
"Republic of Moldova" = "Moldova",
"Russian Federation" = "Russia",
"Saint Kitts and Nevis" = "Nevis",
"Saint Vincent and the Grenadines" = "Grenadines",
"St. Vincent and the Grenadines" = "Grenadines",
"Sint Maarten (Dutch part)" = "Saint Martin",
"Syrian Arab Republic" = "Syria",
"Trinidad and Tobago" = "Trinidad",
"United Kingdom of Great Britain and Northern Ireland" = "UK",
"United Kingdom" = "UK",
"United Republic of Tanzania" = "Tanzania",
"United States of America" = "USA",
"United States" = "USA",
"Venezuela (Bolivarian Republic of)" = "Venezuela",
"Viet Nam" = "Vietnam",
"Wallis and Futuna Islands" = "Wallis and Futuna",
"West Bank and Gaza Strip" = "Gaza Strip",
"Yemen, Rep." = "Yemen")
df1 <- df1 %>% filter(Country != "Eswatini") %>% filter(Country != "Tokelau") %>% filter(Country != "Tuvalu")
return(df1)
}
recode_dataset <- function(df1, df2 = world_map){
flu_countries <- as.factor(df1$Country) %>% levels()
world_countries <- as.factor(df2$region) %>% levels()
countries_match <- flu_countries %in% world_countries
countries_recode <- c()
for(i in which(countries_match == FALSE)) {
countries_recode <- c(countries_recode, flu_countries[i])
}
countries_recode
df1$Country <- recode(df1$Country,
"Antigua and Barbuda" = "Barbuda",
"Bolivia (Plurinational State of)" = "Bolivia",
"Bonaire, Saint Eustatius and Saba" = "Saint Eustatius",
"British Virgin Islands" = "Virgin Islands",
"Brunei Darussalam" = "Brunei",
"CÃ´te d'Ivoire" = "Ivory Coast",
"Cote d'Ivoire" = "Ivory Coast",
"Cabo Verde" = "Cape Verde",
"China, Hong Kong SAR" = "Hong Kong",
"China, Macao SAR" = "Macao",
"Congo" = "Democratic Republic of the Congo",
"Congo, Dem. Rep." = "Democratic Republic of the Congo",
"CuraÃ§ao" = "Curacao",
"Czechia" = "Czech Republic",
"Democratic People's Republic of Korea" = "North Korea",
"Iran (Islamic Republic of)" = "Iran",
"Lao People's Democratic Republic" = "Laos",
"Micronesia (Federated States of)" = "Micronesia",
"North Macedonia" = "Macedonia",
"Korea, North" = "North Korea",
"Republic of Korea" = "South Korea",
"Korea, South" = "South Korea",
"Republic of Moldova" = "Moldova",
"Russian Federation" = "Russia",
"Saint Kitts and Nevis" = "Nevis",
"Saint Vincent and the Grenadines" = "Grenadines",
"St. Vincent and the Grenadines" = "Grenadines",
"Sint Maarten (Dutch part)" = "Saint Martin",
"Syrian Arab Republic" = "Syria",
"Trinidad and Tobago" = "Trinidad",
"United Kingdom of Great Britain and Northern Ireland" = "UK",
"United Kingdom" = "UK",
"United Republic of Tanzania" = "Tanzania",
"United States of America" = "USA",
"United States" = "USA",
"Venezuela (Bolivarian Republic of)" = "Venezuela",
"Viet Nam" = "Vietnam",
"Wallis and Futuna Islands" = "Wallis and Futuna",
"West Bank and Gaza Strip" = "Gaza Strip",
"Yemen, Rep." = "Yemen")
df1 <- df1 %>% filter(Country != "Eswatini") %>% filter(Country != "Tokelau") %>% filter(Country != "Tuvalu")
return(df1)
}
flu_2015$Total.InfA/flu_2015$Population
flu_2015$Population * 1000000
flu_2015$Population <- flu_2015$Population * 1000000
incidence100 <- function(df, A, B){
a <- df$A * 100000
b <- a / df$B
print(b)
}
incidence100(flu_2015, A = Total.InfA, B = Population)
incidence100(flu_2015, A = "Total.InfA", B = "Population")
flu_2015$Total.InfA * 100000 / flu_2015$Population
incidence100 <- function(df, A, B){
a <- df$A * 100000 / df$B
print(b)
}
incidence100(flu_2015, A = "Total.InfA", B = "Population")
incidence100 <- function(df, A, B){
a <- df$A * 100000 / df$B
print(a)
}
incidence100(flu_2015, A = "Total.InfA", B = "Population")
incidence100(flu_2015, A = Total.InfA, B = Population)
incidence100 <- function(df, A){
a <- df$A * 100000 / df$Population
print(a)
}
incidence100(flu_2015, A = Total.InfA)
incidence100(flu_2015, A = "Total.InfA")
incidence100 <- function(data){
a <- data * 100000 / df$Population
print(a)
}
incidence100(flu_2015$Total.InfA)
incidence100 <- function(df, data){
a <- data * 100000 / df$Population
print(a)
}
incidence100(flu_2015, flu_2015$Total.InfA)
incidence100 <- function(df, A){
a <- df[,A] * 100000 / df$Population
print(a)
}
incidence100(flu_2015, A = "Total.InfA")
incidence100 <- function(df, A){
a <- df[, A] * 100000 / df$Population
print(a)
}
incidence100 <- function(df, A){
a <- df[, A] * 100000 / df$Population
return(a)
}
flu_2015$Inc100 <- incidence100(flu_2015, A = "Total.InfA")
make_staticplot <- function(df1, df2 = world_map, week = 50, plot_title = "Flu Incidence"){
df1 <- df1 %>% filter(Week == week)
world_map_joined <- left_join(df2, df1,
by = c('region' = 'Country'))
print(world_map_joined$Country[which(is.na(world_map_joined$Total.InfA) == TRUE)])
p <- ggplot() +
geom_polygon(data = world_map_joined, aes(x = long, y = lat, group = group, fill = Inc100)) +
labs(title = plot_title, subtitle = "Source: World Health Organization") +
theme(plot.title=element_text(size=20, hjust=0.5, face="bold", colour="grey", vjust=-1)
,plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="grey")
,panel.background = element_rect(fill = "white")
,plot.background = element_rect(fill = "white")
,panel.grid = element_blank()
,axis.text = element_blank()
,axis.title = element_blank()
,axis.ticks = element_blank()
)
return(p)
}
flu_plot2015 <- make_staticplot(df1 = flu_2015,
plot_title = "Incidence of Flu 2015")
flu_plot2015
make_dynamicplot <- function(df1, df2 = world_map, plot_title = "Flu AH1 Incidence 2010-2019 : {closest_state}"){
world_map_joined <- left_join(df2, df1,
by = c('region' = 'Country'))
q <- ggplot() +
geom_polygon(data = world_map_joined, aes(x = long, y = lat, group = group, fill = Inc100)) +
labs(title = plot_title,
subtitle = ggtitle("Week: "),
caption = "Source: World Health Organization") +
transition_manual(Week) +
theme(plot.title=element_text(size=20, hjust=0.5, face="bold", colour="grey", vjust=-1)
,plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="grey")
,plot.caption =element_text(size=8, hjust=0.5, face="italic", color="grey")
,panel.background = element_rect(fill = "white")
,plot.background = element_rect(fill = "white")
,panel.grid = element_blank()
,axis.text = element_blank()
,axis.title = element_blank()
,axis.ticks = element_blank()
)
return(q + coord_fixed(ratio = 2))
}
flu_dynamic <- make_dynamicplot(df1 = flu_2015, plot_title = "Flu AH1 Incidence 2015")
flu_dynamic
make_staticplot <- function(df1, df2 = world_map, week = 50, plot_title = "Flu Incidence"){
df1 <- df1 %>% filter(Week == week)
world_map_joined <- left_join(df2, df1,
by = c('region' = 'Country'))
print(world_map_joined$Country[which(is.na(world_map_joined$Total.InfA) == TRUE)])
p <- ggplot() +
geom_polygon(data = world_map_joined, aes(x = long, y = lat, group = group, fill = Inc100)) +
labs(title = plot_title, subtitle = "Source: World Health Organization") +
theme(plot.title=element_text(size=20, hjust=0.5, face="bold", colour="grey", vjust=-1)
,plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="grey")
,panel.background = element_rect(fill = "white")
,plot.background = element_rect(fill = "white")
,panel.grid = element_blank()
,axis.text = element_blank()
,axis.title = element_blank()
,axis.ticks = element_blank()
,scale_colour_gradient(low = "yellow", high = "red", na.value = NA)
)
return(p)
}
flu_plot2015 <- make_staticplot(df1 = flu_2015,
plot_title = "Incidence of Flu 2015")
flu_plot2015 <- make_staticplot(df1 = flu_2015,
plot_title = "Incidence of Flu 2015")
make_staticplot <- function(df1, df2 = world_map, week = 50, plot_title = "Flu Incidence"){
df1 <- df1 %>% filter(Week == week)
world_map_joined <- left_join(df2, df1,
by = c('region' = 'Country'))
print(world_map_joined$Country[which(is.na(world_map_joined$Total.InfA) == TRUE)])
p <- ggplot() +
geom_polygon(data = world_map_joined, aes(x = long, y = lat, group = group, fill = Inc100)) +
labs(title = plot_title, subtitle = "Source: World Health Organization") +
theme(plot.title=element_text(size=20, hjust=0.5, face="bold", colour="grey", vjust=-1)
,plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="grey")
,panel.background = element_rect(fill = "white")
,plot.background = element_rect(fill = "white")
,panel.grid = element_blank()
,axis.text = element_blank()
,axis.title = element_blank()
,axis.ticks = element_blank()
) +
scale_colour_gradient(low = "yellow", high = "red", na.value = NA)
return(p)
}
flu_plot2015 <- make_staticplot(df1 = flu_2015,
plot_title = "Incidence of Flu 2015")
flu_plot2015
make_staticplot <- function(df1, df2 = world_map, week = 50, plot_title = "Flu Incidence"){
df1 <- df1 %>% filter(Week == week)
world_map_joined <- left_join(df2, df1,
by = c('region' = 'Country'))
print(world_map_joined$Country[which(is.na(world_map_joined$Total.InfA) == TRUE)])
p <- ggplot() +
geom_polygon(data = world_map_joined, aes(x = long, y = lat, group = group, fill = Inc100)) +
labs(title = plot_title, subtitle = "Source: World Health Organization") +
theme(plot.title=element_text(size=20, hjust=0.5, face="bold", colour="grey", vjust=-1)
,plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="grey")
,panel.background = element_rect(fill = "white")
,plot.background = element_rect(fill = "white")
,panel.grid = element_blank()
,axis.text = element_blank()
,axis.title = element_blank()
,axis.ticks = element_blank()
) +
scale_colour_gradientn(low = "yellow", high = "red", na.value = NA)
return(p)
}
flu_plot2015 <- make_staticplot(df1 = flu_2015,
plot_title = "Incidence of Flu 2015")
make_staticplot <- function(df1, df2 = world_map, week = 50, plot_title = "Flu Incidence"){
df1 <- df1 %>% filter(Week == week)
world_map_joined <- left_join(df2, df1,
by = c('region' = 'Country'))
print(world_map_joined$Country[which(is.na(world_map_joined$Total.InfA) == TRUE)])
p <- ggplot() +
geom_polygon(data = world_map_joined, aes(x = long, y = lat, group = group, fill = Inc100)) +
labs(title = plot_title, subtitle = "Source: World Health Organization") +
theme(plot.title=element_text(size=20, hjust=0.5, face="bold", colour="grey", vjust=-1)
,plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="grey")
,panel.background = element_rect(fill = "white")
,plot.background = element_rect(fill = "white")
,panel.grid = element_blank()
,axis.text = element_blank()
,axis.title = element_blank()
,axis.ticks = element_blank()
) +
scale_fill_gradient(low = "yellow", high = "red", na.value = NA)
return(p)
}
flu_plot2015 <- make_staticplot(df1 = flu_2015,
plot_title = "Incidence of Flu 2015")
flu_plot2015
make_staticplot <- function(df1, df2 = world_map, week = 50, plot_title = "Flu Incidence"){
df1 <- df1 %>% filter(Week == week)
world_map_joined <- left_join(df2, df1,
by = c('region' = 'Country'))
print(world_map_joined$Country[which(is.na(world_map_joined$Total.InfA) == TRUE)])
p <- ggplot() +
geom_polygon(data = world_map_joined, aes(x = long, y = lat, group = group, fill = Inc100)) +
labs(title = plot_title, subtitle = "Source: World Health Organization") +
theme(plot.title=element_text(size=20, hjust=0.5, face="bold", colour="grey", vjust=-1)
,plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="grey")
,panel.background = element_rect(fill = "white")
,plot.background = element_rect(fill = "white")
,panel.grid = element_blank()
,axis.text = element_blank()
,axis.title = element_blank()
,axis.ticks = element_blank()
) +
scale_fill_gradient(low = "blue", high = "purple", na.value = NA)
return(p)
}
flu_plot2015 <- make_staticplot(df1 = flu_2015,
plot_title = "Incidence of Flu 2015")
flu_plot2015
make_staticplot <- function(df1, df2 = world_map, week = 50, plot_title = "Flu Incidence"){
df1 <- df1 %>% filter(Week == week)
world_map_joined <- left_join(df2, df1,
by = c('region' = 'Country'))
print(world_map_joined$Country[which(is.na(world_map_joined$Total.InfA) == TRUE)])
p <- ggplot() +
geom_polygon(data = world_map_joined, aes(x = long, y = lat, group = group, fill = Inc100)) +
labs(title = plot_title, subtitle = "Source: World Health Organization") +
theme(plot.title=element_text(size=20, hjust=0.5, face="bold", colour="grey", vjust=-1)
,plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="grey")
,panel.background = element_rect(fill = "white")
,plot.background = element_rect(fill = "white")
,panel.grid = element_blank()
,axis.text = element_blank()
,axis.title = element_blank()
,axis.ticks = element_blank()
) +
scale_fill_gradient(low = "navy", high = "lightsteelblue", na.value = "gray")
return(p)
}
world_joined <- left_join(world_map, flu_2015_Week52,
by = c("region" = 'Country'))
flu_plot2015 <- make_staticplot(df1 = flu_2015,
plot_title = "Incidence of Flu 2015")
flu_plot2015
make_staticplot <- function(df1, df2 = world_map, week = 50, plot_title = "Flu Incidence"){
df1 <- df1 %>% filter(Week == week)
world_map_joined <- left_join(df2, df1,
by = c('region' = 'Country'))
print(world_map_joined$Country[which(is.na(world_map_joined$Total.InfA) == TRUE)])
p <- ggplot() +
geom_polygon(data = world_map_joined, aes(x = long, y = lat, group = group, fill = Inc100)) +
labs(title = plot_title, subtitle = "Source: World Health Organization") +
theme(plot.title=element_text(size=20, hjust=0.5, face="bold", colour="grey", vjust=-1)
,plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="grey")
,panel.background = element_rect(fill = "white")
,plot.background = element_rect(fill = "white")
,panel.grid = element_blank()
,axis.text = element_blank()
,axis.title = element_blank()
,axis.ticks = element_blank()
) +
scale_fill_gradient(low = "lightsteelblue", high = "aegean", na.value = "darkgray")
return(p)
}
flu_plot2015 <- make_staticplot(df1 = flu_2015,
plot_title = "Incidence of Flu 2015")
flu_plot2015
make_staticplot <- function(df1, df2 = world_map, week = 50, plot_title = "Flu Incidence"){
df1 <- df1 %>% filter(Week == week)
world_map_joined <- left_join(df2, df1,
by = c('region' = 'Country'))
print(world_map_joined$Country[which(is.na(world_map_joined$Total.InfA) == TRUE)])
p <- ggplot() +
geom_polygon(data = world_map_joined, aes(x = long, y = lat, group = group, fill = Inc100)) +
labs(title = plot_title, subtitle = "Source: World Health Organization") +
theme(plot.title=element_text(size=20, hjust=0.5, face="bold", colour="grey", vjust=-1)
,plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="grey")
,panel.background = element_rect(fill = "white")
,plot.background = element_rect(fill = "white")
,panel.grid = element_blank()
,axis.text = element_blank()
,axis.title = element_blank()
,axis.ticks = element_blank()
) +
scale_fill_gradient(low = "lightsteelblue", high = "aegean", na.value = "darkgray")
return(p)
}
flu_plot2015 <- make_staticplot(df1 = flu_2015,
plot_title = "Incidence of Flu 2015")
make_staticplot <- function(df1, df2 = world_map, week = 50, plot_title = "Flu Incidence"){
df1 <- df1 %>% filter(Week == week)
world_map_joined <- left_join(df2, df1,
by = c('region' = 'Country'))
print(world_map_joined$Country[which(is.na(world_map_joined$Total.InfA) == TRUE)])
p <- ggplot() +
geom_polygon(data = world_map_joined, aes(x = long, y = lat, group = group, fill = Inc100)) +
labs(title = plot_title, subtitle = "Source: World Health Organization") +
theme(plot.title=element_text(size=20, hjust=0.5, face="bold", colour="grey", vjust=-1)
,plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="grey")
,panel.background = element_rect(fill = "white")
,plot.background = element_rect(fill = "white")
,panel.grid = element_blank()
,axis.text = element_blank()
,axis.title = element_blank()
,axis.ticks = element_blank()
) +
scale_fill_gradient(low = "lightsteelblue", high = "indigo", na.value = "darkgray")
return(p)
}
flu_plot2015 <- make_staticplot(df1 = flu_2015,
plot_title = "Incidence of Flu 2015")
flu_plot2015
make_staticplot <- function(df1, df2 = world_map, week = 50, plot_title = "Flu Incidence"){
df1 <- df1 %>% filter(Week == week)
world_map_joined <- left_join(df2, df1,
by = c('region' = 'Country'))
print(world_map_joined$Country[which(is.na(world_map_joined$Total.InfA) == TRUE)])
p <- ggplot() +
geom_polygon(data = world_map_joined, aes(x = long, y = lat, group = group, fill = Inc100)) +
labs(title = plot_title, subtitle = "Source: World Health Organization") +
theme(plot.title=element_text(size=20, hjust=0.5, face="bold", colour="grey", vjust=-1)
,plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="grey")
,panel.background = element_rect(fill = "white")
,plot.background = element_rect(fill = "white")
,panel.grid = element_blank()
,axis.text = element_blank()
,axis.title = element_blank()
,axis.ticks = element_blank()
) +
scale_fill_gradient(low = "lightsteelblue", high = "navy", na.value = "darkgray")
return(p)
}
flu_plot2015 <- make_staticplot(df1 = flu_2015,
plot_title = "Incidence of Flu 2015")
flu_plot2015
make_dynamicplot <- function(df1, df2 = world_map, plot_title = "Flu AH1 Incidence 2010-2019 : {closest_state}"){
world_map_joined <- left_join(df2, df1,
by = c('region' = 'Country'))
q <- ggplot() +
geom_polygon(data = world_map_joined, aes(x = long, y = lat, group = group, fill = Inc100)) +
labs(title = plot_title,
subtitle = ggtitle("Week: "),
caption = "Source: World Health Organization") +
transition_manual(Week) +
theme(plot.title=element_text(size=20, hjust=0.5, face="bold", colour="grey", vjust=-1)
,plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="grey")
,plot.caption =element_text(size=8, hjust=0.5, face="italic", color="grey")
,panel.background = element_rect(fill = "white")
,plot.background = element_rect(fill = "white")
,panel.grid = element_blank()
,axis.text = element_blank()
,axis.title = element_blank()
,axis.ticks = element_blank()
) +
scale_fill_gradient(low = "lightsteelblue", high = "navy", na.value = "darkgray")
return(q + coord_fixed(ratio = 2))
}
flu_dynamic <- make_dynamicplot(df1 = flu_2015, plot_title = "Flu AH1 Incidence 2015")
flu_dynamic
setwd("C:/Users/aldoh/Documents/Coursera/R Programming/Week 3")
a <- c(3, 4, 5, 6)
numbers <- matrix(a, nrow = 2, ncol = 2)
kjlh
l
